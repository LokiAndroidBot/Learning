name: Build and Upload APK to Diawi


on:
  push:
    branches:
      - dev  # Change to your desired branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up JDK (ensure compatibility with your project)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      # Cache Gradle dependencies (optional for faster builds)
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build APK
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # Upload APK to Diawi and get the link
      - name: Upload APK to Diawi
        id: upload_diawi
        run: |
          DIAWI_API_KEY="${{ secrets.DIAWI_API_KEY }}"
          APK_PATH="app/build/outputs/apk/release/app-release.apk"

          # Upload APK using curl and save the response
          DIAWI_RESPONSE=$(curl -X POST \
            -F "file=@${APK_PATH}" \
            -F "token=${DIAWI_API_KEY}" \
            -F "install=true" \
            https://upload.diawi.com/)
          
          # Extract the link from the response using jq
          DIAWI_LINK=$(echo $DIAWI_RESPONSE | jq -r .link)
          
          # Set the link as an environment variable
          echo "DIAWI_LINK=${DIAWI_LINK}" >> $GITHUB_ENV

      # Show the Diawi link
      - name: Show Diawi link
        run: |
          echo "APK is available at: ${{ env.DIAWI_LINK }}"
