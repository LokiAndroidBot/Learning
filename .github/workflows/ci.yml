name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17


      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3
          target: google_apis

      - name: Install Required System Images
        run: |
          sdkmanager --install "platforms;android-30" "platform-tools" "build-tools;30.0.3"
          sdkmanager --install "system-images;android-30;google_apis;x86"


      # Grant execute permission for Gradle wrapper
      - name: Grant Execute Permission for Gradlew
        run: chmod +x ./gradlew

      - name: Start Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel
          emulator-options: "-no-window -gpu swiftshader_indirect"
          emulator-boot-timeout: 600
          disable-animations: true
          use-snapshots: true
          script: ./gradlew connectedAndroidTest --no-daemon

      - name: Wait for Emulator to Boot
        run: |
          for i in {1..30}; do
            if adb shell getprop sys.boot_completed | grep -m 1 "1"; then
              echo "Emulator is ready."
              exit 0
            fi
            echo "Waiting for emulator to boot..."
            sleep 10
          done
          echo "Emulator failed to boot."
          exit 1

      # Cache Gradle dependencies
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Spotless check and apply formatting
      - name: Apply Spotless Formatting
        run: ./gradlew spotlessApply --init-script gradle/init.gradle.kts --no-configuration-cache

      # Build and run unit tests
      - name: Build and Run Unit Tests
        run: ./gradlew testDebugUnitTest --no-daemon

      # Run lint checks
      - name: Run Lint Check
        run: ./gradlew lintDebug --no-daemon

      - name: Apply Lint Fix
        run: ./gradlew lintFixDebug --no-daemon

      # Run instrumentation tests
      - name: Run Instrumentation Tests
        run: ./gradlew connectedAndroidTest --no-daemon

      # Generate code coverage report
      - name: Generate Code Coverage Report
        run: ./gradlew advancedTestReport

      # Upload code coverage to Codecov (Optional, commented out)
      # - name: Upload Code Coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
      #     flags: unittests
      #     name: codecov-umbrella
      #     fail_ci_if_error: true

      # Dependency analysis (Optional, commented out)
      # - name: Run Dependency Analysis
      #   run: ./gradlew dependencyCheckAnalyze
